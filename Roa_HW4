{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Roa_HW4","provenance":[],"authorship_tag":"ABX9TyOSiGDw/wmof7NPuQYNtpMX"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"OWQ_Dk1T5AEE"},"source":["# Problem set for week of Jan 25th, 2021\r\n","\r\n","## Juan Roa\r\n","\r\n","### 1. NFL team states and names"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DV-WmtCusWwC","executionInfo":{"status":"ok","timestamp":1612041824511,"user_tz":480,"elapsed":416,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"81641350-a5ac-46b6-8137-c320643aaeb9"},"source":["# part 1\r\n","d = {'Arizona' : 'Cardinals', 'Baltimore' : 'Ravens', 'Atlanta' : 'Falcons',\r\n","     'Buffalo' : 'Bills', 'New York' : 'Giants'}\r\n","print(d)\r\n","\r\n","# part 2\r\n","nicknames = list(d.keys())\r\n","print(nicknames) \r\n","\r\n","# part 3\r\n","states = list(d.values())\r\n","print(states)\r\n","\r\n","# part 4\r\n","keys_to_search = ['Arizona', 'Chicago', 'Tennessee', 'New York', 'Atlanta']\r\n","for i in keys_to_search:\r\n","  if i in d:\r\n","    print(i, ' is one of the keys with nickname', d[i])\r\n","  elif i not in d:\r\n","    print(i, ' is not one of the keys')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'Arizona': 'Cardinals', 'Baltimore': 'Ravens', 'Atlanta': 'Falcons', 'Buffalo': 'Bills', 'New York': 'Giants'}\n","['Arizona', 'Baltimore', 'Atlanta', 'Buffalo', 'New York']\n","['Cardinals', 'Ravens', 'Falcons', 'Bills', 'Giants']\n","Arizona  is one of the keys with nickname Cardinals\n","Chicago  is not one of the keys\n","Tennessee  is not one of the keys\n","New York  is one of the keys with nickname Giants\n","Atlanta  is one of the keys with nickname Falcons\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Ag-7aSDH8EiO"},"source":["### 2. Create a list of filenames (list comphrehension)"]},{"cell_type":"code","metadata":{"id":"r9F9OU5EuvbA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612042125899,"user_tz":480,"elapsed":405,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"55209861-7dbd-4987-d50e-535d783139b5"},"source":["files = ['f1.png', 'f2.txt.', 'f3.txt', 'f4', 'f5.png', 'f6.png', 'f7', 'f8.txt']\r\n","\r\n","# part 1\r\n","png = [image for image in files if '.png' in image]\r\n","print(png)\r\n","\r\n","# part 2\r\n","valid_names = [name for name in files if '.png' in name or '.txt' in name]\r\n","print(valid_names)\r\n","\r\n","# part 3\r\n","invalid_names =[name for name in files if 'png' not in name and '.txt' not in name]\r\n","print(invalid_names)\r\n","\r\n","# part 4\r\n","correction = [name + '.png' for name in invalid_names]\r\n","print(correction)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['f1.png', 'f5.png', 'f6.png']\n","['f1.png', 'f2.txt.', 'f3.txt', 'f5.png', 'f6.png', 'f8.txt']\n","['f4', 'f7']\n","['f4.png', 'f7.png']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"P07tGYWl8t_m"},"source":["### 3. Finding the second largest value in Dictionary"]},{"cell_type":"code","metadata":{"id":"aOS3HdI38xaS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612066039181,"user_tz":480,"elapsed":748,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"1cc97ab3-b773-4e1e-9a91-ddd74d46f6c4"},"source":["new_dict = {'A':67, 'B':23, 'C':45, 'D':56, 'E':12, 'F':69}\r\n","\r\n","# method 1\r\n","largest = max(new_dict.values())\r\n","second = 0\r\n","\r\n","for i in new_dict:\r\n","  if new_dict[i] < largest and new_dict[i] > second:\r\n","    second = new_dict[i]\r\n","print(second)\r\n","\r\n","# method 2\r\n","list_values = list(new_dict.values())\r\n","sorted = sorted(list_values)\r\n","print(sorted)\r\n","print('second largest value = ', sorted[-2])"],"execution_count":12,"outputs":[{"output_type":"stream","text":["67\n","[12, 23, 45, 56, 67, 69]\n","second largest value =  67\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"DX4bPHrH8-9V"},"source":["### 4. Create a list which contains 5 tuples. (Manipulation and search)"]},{"cell_type":"code","metadata":{"id":"Y25epW4q95N1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612146596271,"user_tz":480,"elapsed":548,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"ebf94c7d-7da6-4ff8-e982-463fe2cfbb5c"},"source":["pairs = [('Nadal', 'Tennis'), ('Phelps', 'Swim'), ('JC', 'Rocket League'), ('Kobe', 'Basketball'), ('Robinson', 'Baseball')]\r\n","\r\n","# part 1\r\n","pair_dict = dict(pairs)\r\n","last = pair_dict.popitem()\r\n","print(last)\r\n","\r\n","# part 2 \r\n","print(pair_dict.get('Robinson'))\r\n","\r\n","# part 3\r\n","second_dict = {'Bobby':'Chess', 'Sachin':'Cricket'}\r\n","pair_dict.update(second_dict)\r\n","print(pair_dict)\r\n","\r\n","# part 4\r\n","value_list = list(pair_dict.values())\r\n","print(value_list[-1])\r\n","\r\n","# part 5\r\n","key_list = list(pair_dict.keys())\r\n","b_list = [name for name in key_list if 'B' in name[0]]\r\n","print(b_list)"],"execution_count":23,"outputs":[{"output_type":"stream","text":["('Robinson', 'Baseball')\n","None\n","{'Nadal': 'Tennis', 'Phelps': 'Swim', 'JC': 'Rocket League', 'Kobe': 'Basketball', 'Bobby': 'Chess', 'Sachin': 'Cricket'}\n","Cricket\n","['Bobby']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-ONvyVsV9-uV"},"source":["### 5. Create celeb list and info"]},{"cell_type":"code","metadata":{"id":"PHF04N6s-FQ7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612144813499,"user_tz":480,"elapsed":482,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"b9f8571c-24da-46f0-9810-0f45f0f878a6"},"source":["celeb_list = [[\"Kylie\", \"Ariana\", \"Taylor\", \"Billie\"], [590, 72, 63.5, 53], sorted,[23,27,31,19], sum]\r\n","\r\n","# part 1\r\n","names = tuple(celeb_list[0])\r\n","ages = tuple(celeb_list[3])\r\n","celeb_age_dict = {}\r\n","for i in range(len(names)):\r\n","  celeb_age_dict[names[i]] = ages[i]\r\n","print(celeb_age_dict)\r\n"," \r\n","# part 2\r\n","celeb_age_sort_list = list(celeb_list[2](celeb_age_dict.items()))\r\n","print(celeb_age_sort_list)\r\n","\r\n","# part 3\r\n","avg_income = celeb_list[-1](celeb_list[1]) / 4\r\n","print(avg_income)\r\n","\r\n","# part 4\r\n","celeb_avg_income_list = []\r\n","pairing = []\r\n","for i in range(len(celeb_list[0])):\r\n","  tup_list = [celeb_list[0][i], avg_income]\r\n","  pairing.append(tup_list)\r\n","\r\n","for i in range(len(pairing)):\r\n","  tuples = tuple(pairing[i])\r\n","  celeb_avg_income_list.append(tuples)\r\n","print(celeb_avg_income_list)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["{'Kylie': 23, 'Ariana': 27, 'Taylor': 31, 'Billie': 19}\n","[('Ariana', 27), ('Billie', 19), ('Kylie', 23), ('Taylor', 31)]\n","194.625\n","[('Kylie', 194.625), ('Ariana', 194.625), ('Taylor', 194.625), ('Billie', 194.625)]\n"],"name":"stdout"}]}]}