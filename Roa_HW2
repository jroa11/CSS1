{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Roa_HW2","provenance":[],"authorship_tag":"ABX9TyNrxFVDAqyfGLJ9sjHkMdWG"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"MI2ULmUVyQP3"},"source":["Q1. Prints Captain Pickard Statement"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ck7ITBlKxpf-","executionInfo":{"status":"ok","timestamp":1610424557719,"user_tz":480,"elapsed":719,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"3177e668-6f1e-4a8a-c52f-c37b7b0c5695"},"source":["print('Captain Pickard once said, “There can be no justice so long as laws are absolute. Even life itself is an exercise in exceptions.”')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Captain Pickard once said, “There can be no justice so long as laws are absolute. Even life itself is an exercise in exceptions.”\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"PxfIEBRZyZ5G"},"source":["Q2. Create a list of names and play with it"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sr8h-fwfyeWX","executionInfo":{"status":"ok","timestamp":1610733851474,"user_tz":480,"elapsed":717,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"d29b480b-2579-414e-f549-f7e0d910fe39"},"source":["# initializes a list of names\r\n","names = ['Billie', 'Bill', 'Elon']\r\n","print(names)\r\n","\r\n","# sorts the list of names\r\n","names = sorted(names)\r\n","print(names)\r\n","\r\n","# pops the middle name, stores it in new variable\r\n","special_name = names.pop(1)\r\n","print(special_name)\r\n","print(names)\r\n","\r\n","# add new names to end of list, then prints\r\n","names.append('Jack')\r\n","print(names)\r\n","\r\n","names.append('Sparrow')\r\n","print(names)\r\n","\r\n","# Removes 2nd name in list, then prints\r\n","del names[1]\r\n","print(names)\r\n","\r\n","# inputs my name into the 3rd position of the list, then prints\r\n","names = names[:2] + ['JC'] + names[2:]\r\n","print(names)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["['Billie', 'Bill', 'Elon']\n","['Bill', 'Billie', 'Elon']\n","Billie\n","['Bill', 'Elon']\n","['Bill', 'Elon', 'Jack']\n","['Bill', 'Elon', 'Jack', 'Sparrow']\n","['Bill', 'Jack', 'Sparrow']\n","['Bill', 'Jack', 'JC', 'Sparrow']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"S_YO-W6Z1U5p"},"source":["Q3. Create a list of integers and play with it"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iv4iQu181Xhg","executionInfo":{"status":"ok","timestamp":1610506829797,"user_tz":480,"elapsed":597,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"835640ab-0849-44e5-8e1e-8861c516b6ce"},"source":["# creates a list from 0-20\r\n","lst = list(range(21))\r\n","\r\n","\r\n","#creates list that indexes only even numbers, then prints\r\n","lst_even = []\r\n","for i in lst:\r\n","  if i % 2 == 0:\r\n","    lst_even.append(i)\r\n","\r\n","print(lst_even)\r\n","\r\n","# creates a list that indexes only odd numbers, then prints\r\n","lst_odd = []\r\n","for i in lst:\r\n","  if i % 2 != 0:\r\n","    lst_odd.append(i)\r\n","\r\n","print(lst_odd)\r\n","\r\n","#makes a list indexing even numbers backwards, then prints\r\n","lst_back_even = []\r\n","for i in lst[::-1]:\r\n","  if i % 2 == 0:\r\n","    lst_back_even.append(i)\r\n","\r\n","print(lst_back_even)\r\n","\r\n","# makes a list indexing odd numbers backwards, then prints\r\n","lst_back_odd = []\r\n","for i in lst[::-1]:\r\n","  if i % 2 != 0:\r\n","    lst_back_odd.append(i)\r\n","\r\n","print(lst_back_odd)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20]\n","[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]\n","[20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0]\n","[19, 17, 15, 13, 11, 9, 7, 5, 3, 1]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Ek_yegge4fWq"},"source":["Q4. List manipulation"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SsHFLPr64kBp","executionInfo":{"status":"ok","timestamp":1610734685917,"user_tz":480,"elapsed":745,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"fe98c10e-8766-4102-e7ee-a7241d5f2ad8"},"source":["# creates a list of integers in increments of 5, then prints\r\n","list1 = list(range(0,36,5))\r\n","print(list1)\r\n","\r\n","# creates copy of list1 but deletes last 2 entries, then prints\r\n","list1_copy = list1\r\n","print(list1)\r\n","\r\n","del list1_copy[-2:]\r\n","print(list1_copy)\r\n","\r\n","# creates list of integeres in increments of -4, then prints\r\n","list2 = list(range(0,-29,-4))\r\n","print(list2)\r\n","\r\n","# sorts list2, then prints\r\n","list2.sort()\r\n","print(list2)\r\n","\r\n","# creates multiplication table for 17 from 1 to 10, then prints\r\n","table_17 = []\r\n","for i in range(11):\r\n","  product = i * 17\r\n","  table_17.append(product)\r\n","\r\n","del table_17[0]\r\n","print(table_17)\r\n","\r\n","# creates multiplication table for 19 from 1 to 10, then prints\r\n","table_19 = []\r\n","for i in range(11):\r\n","  product = i * 19\r\n","  table_19.append(product)\r\n","\r\n","del table_19[0]\r\n","print(table_19)\r\n","\r\n","# squares the multiplication table for 17, then prints\r\n","table17_squared = []\r\n","for i in table_17:\r\n","  product = i ** 2\r\n","  table17_squared.append(product)\r\n","\r\n","print(table17_squared)"],"execution_count":15,"outputs":[{"output_type":"stream","text":["[0, 5, 10, 15, 20, 25, 30, 35]\n","[0, 5, 10, 15, 20, 25, 30, 35]\n","[0, 5, 10, 15, 20, 25]\n","[0, -4, -8, -12, -16, -20, -24, -28]\n","[-28, -24, -20, -16, -12, -8, -4, 0]\n","[17, 34, 51, 68, 85, 102, 119, 136, 153, 170]\n","[19, 38, 57, 76, 95, 114, 133, 152, 171, 190]\n","[289, 1156, 2601, 4624, 7225, 10404, 14161, 18496, 23409, 28900]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zEmAGrhs6AYR"},"source":[""],"execution_count":null,"outputs":[]}]}