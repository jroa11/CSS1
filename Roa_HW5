{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Roa_HW5","provenance":[],"authorship_tag":"ABX9TyOjW7Qn2u2qlYZ8S9iX3b8k"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"3ugLjEQUqPgG"},"source":["# Problem set for week of 02.01.2021\r\n","\r\n","## Juan Roa A15541981\r\n","\r\n","### 1. describe the problem later"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d5Ml3FnfpuIU","executionInfo":{"status":"ok","timestamp":1612405246518,"user_tz":480,"elapsed":628,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"60ee5f14-726d-4d32-8140-b17897e5945d"},"source":["test_list_1 = [8, 8, 3, 5, 5, 8, 1, 4, 8, 6, 3, 10, 9]\r\n","test_list_2 = [8, 12, 3, 5, 5, 8, 1, 4, 8, 3, 10, 9]\r\n","\r\n","# part 1\r\n","def mean_func(x):\r\n","  total = 0\r\n","  for i in x:\r\n","    total += i\r\n","  avg = total / len(x)\r\n","  return round(avg, 2)\r\n","\r\n","print(mean_func(test_list_1))\r\n","print(mean_func(test_list_2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["6.0\n","6.33\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e2L36Vq-10lv","executionInfo":{"status":"ok","timestamp":1612406510126,"user_tz":480,"elapsed":590,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"13356f77-f196-428c-f2b7-733db8516d36"},"source":["# part 2\r\n","def median_func(x):\r\n","  sort = sorted(x)\r\n","  middle = len(x) / 2\r\n","  median = None\r\n","\r\n","  # find average of index middle and middle - 1 for median\r\n","  if '.0' in str(middle):\r\n","    median = (sort[int(middle)] + sort[int(middle) - 1]) / 2\r\n","  # takes index of middle in sort for median\r\n","  elif '.5' in str(middle):\r\n","    median = sort[int(middle)]\r\n","  return median\r\n","\r\n","print(median_func(test_list_1))\r\n","print(median_func(test_list_2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["6\n","6.5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G0ZIeLll9Efx","executionInfo":{"status":"ok","timestamp":1612407384445,"user_tz":480,"elapsed":708,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"357b21d5-d56a-4919-a48b-5918db3b238a"},"source":["# part 3\r\n","def var_func(x):\r\n","  mean = sum(x) / len(x)\r\n","  var_list = []\r\n","  for i in x:\r\n","    value = (i - mean) ** 2\r\n","    value = round(value, 2)\r\n","    var_list.append(value)\r\n","  return var_list\r\n","\r\n","print(var_func(test_list_1))\r\n","print(var_func(test_list_2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[4.0, 4.0, 9.0, 1.0, 1.0, 4.0, 25.0, 4.0, 4.0, 0.0, 9.0, 16.0, 9.0]\n","[2.78, 32.11, 11.11, 1.78, 1.78, 2.78, 28.44, 5.44, 2.78, 11.11, 13.44, 7.11]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PAbSy3Ai6zo2","executionInfo":{"status":"ok","timestamp":1612406609155,"user_tz":480,"elapsed":780,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"f5eaf102-e4da-4480-a4b9-0b60d9ca842a"},"source":["# part 4\r\n","def mag10_func(x):\r\n","  new_list = []\r\n","  sort = sorted(x)\r\n","  for i in sort:\r\n","    x10 = i * 10\r\n","    new_list.append(x10)\r\n","  return new_list\r\n","\r\n","print(mag10_func(test_list_1))\r\n","print(mag10_func(test_list_2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[10, 30, 30, 40, 50, 50, 60, 80, 80, 80, 80, 90, 100]\n","[10, 30, 30, 40, 50, 50, 80, 80, 80, 90, 100, 120]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"0QuWxUYoujcP"},"source":["### 2. Basic Calculator"]},{"cell_type":"code","metadata":{"id":"pLXPBHoarOwJ"},"source":["# part 1\r\n","def add_nums(num1, num2):\r\n","  \"\"\"\r\n","  purpose: add two numbers together\r\n","\r\n","  inputs:\r\n","  num1 = first number\r\n","  num2 = second number\r\n","  \"\"\" \r\n","  sum = int(num1) + int(num2) \r\n","  return sum\r\n","\r\n","def subtract_nums(num1, num2):\r\n","  \"\"\"\r\n","  purpose: subtract second number from first number\r\n","\r\n","  inputs:\r\n","  num1 = first number\r\n","  num2 = second number\r\n","  \"\"\"   \r\n","  diff = int(num1) - int(num2) #subtracts num2 from num1\r\n","  return diff\r\n","\r\n","def multiply_nums(num1, num2):\r\n","  \"\"\"\r\n","  purpose: multiply two numbers together\r\n","\r\n","  inputs:\r\n","  num1 = first number\r\n","  num2 = second number\r\n","  \"\"\" \r\n","  product = int(num1) * int(num2) #multiplies num1 with num2\r\n","  return product\r\n","\r\n","def divide_nums(num1, num2):\r\n","  \"\"\"\r\n","  purpose: divide first number by second number\r\n","\r\n","  inputs:\r\n","  num1 = first number\r\n","  num2 = second number\r\n","  \"\"\" \r\n","  quotient = int(num1) / int(num2) #divides num1 by num2\r\n","  return quotient"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j4kJ_bk61YRt","executionInfo":{"status":"ok","timestamp":1612405164599,"user_tz":480,"elapsed":19409,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"b2f8bb50-db2c-42bb-c5c5-a3bf8e6a89e1"},"source":["# part 2\r\n","iterations = input(\"How many times do you wanna go through this?\")\r\n","\r\n","for i in range(int(iterations)):\r\n","  num1 = input(\"What is your first number?\")\r\n","  num2 = input(\"What is your second number?\")\r\n","  operation = input(\"What is the operation?\")\r\n","\r\n","  if operation == '+':\r\n","    print('num1 = ', num1, ' num2 = ', num2, ' operator = ', operation)\r\n","    print('output = ', add_nums(num1,num2))\r\n","  elif operation == '-':\r\n","    print('num1 = ', num1, ' num2 = ', num2, ' operator = ', operation)\r\n","    print('output = ', subtract_nums(num1,num2))\r\n","  elif operation == '*':\r\n","    print('num1 = ', num1, ' num2 = ', num2, ' operator = ', operation)\r\n","    print('output = ', multiply_nums(num1,num2))\r\n","  elif operation == '/':\r\n","    print('num1 = ', num1, ' num2 = ', num2, ' operator = ', operation)\r\n","    print('output = ', divide_nums(num1,num2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["How many times do you wanna go through this?4\n","What is your first number?45\n","What is your second number?15\n","What is the operation?+\n","num1 =  45  num2 =  15  operator =  +\n","output =  60\n","What is your first number?10\n","What is your second number?8\n","What is the operation?-\n","num1 =  10  num2 =  8  operator =  -\n","output =  2\n","What is your first number?13\n","What is your second number?3\n","What is the operation?*\n","num1 =  13  num2 =  3  operator =  *\n","output =  39\n","What is your first number?18\n","What is your second number?6\n","What is the operation?/\n","num1 =  18  num2 =  6  operator =  /\n","output =  3.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_70wIRqm1Yq8","executionInfo":{"status":"ok","timestamp":1612405201641,"user_tz":480,"elapsed":7228,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"8804f22b-fc85-4a34-ce9f-30f4914b72fc"},"source":["# part 3d\r\n","iterations = input(\"How many times do you wanna go through this?\")\r\n","\r\n","for i in range(int(iterations)):\r\n","  num1 = input(\"What is your first number?\")\r\n","  num2 = input(\"What is your second number?\")\r\n","  operation = input(\"What is the operation?\")\r\n","\r\n","  if operation == '+':\r\n","    print('num1 = ', num1, ' num2 = ', num2, ' operator = ', operation)\r\n","    print('output = ', add_nums(num1,num2))\r\n","  elif operation == '-':\r\n","    print('num1 = ', num1, ' num2 = ', num2, ' operator = ', operation)\r\n","    print('output = ', subtract_nums(num1,num2))\r\n","  elif operation == '*':\r\n","    print('num1 = ', num1, ' num2 = ', num2, ' operator = ', operation)\r\n","    print('output = ', multiply_nums(num1,num2))\r\n","  elif operation == '/':\r\n","    if num2 == '0':\r\n","      print(\"You cannot divide by 0\")\r\n","      break\r\n","    else:  \r\n","      print('num1 = ', num1, ' num2 = ', num2, ' operator = ', operation)\r\n","      print('output = ', divide_nums(num1,num2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["How many times do you wanna go through this?1\n","What is your first number?3\n","What is your second number?0\n","What is the operation?/\n","You cannot divide by 0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bNzzQANPv7JX"},"source":["### 3. Accept login problem"]},{"cell_type":"code","metadata":{"id":"ml34z0Q_v_5K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612778591653,"user_tz":480,"elapsed":352,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"d831493b-30c6-4c66-f7b0-630800dff198"},"source":["users = {'user1':'password1',\r\n","         'user2':'password2',\r\n","         'user3':'password3'}\r\n","\r\n","check_users = {'wronguser':'wrongpassword',\r\n","               'user1':'password1',\r\n","               'user2':'password1',\r\n","               'user3':'password2'}\r\n","\r\n","def accept_login(users, username, password):\r\n","  user_tuples = [] # list of username-password tuples\r\n","  for i in users:\r\n","    tup = (i, users[i])\r\n","    user_tuples.append(tup)\r\n","\r\n","  attempt_tuples = [] # list of check_users username-password tuples\r\n","  for i in check_users:\r\n","    tup = (i, check_users[i])\r\n","    attempt_tuples.append(tup)\r\n","\r\n","  for i in range(4):\r\n","    if attempt_tuples[i] in user_tuples:\r\n","      print(\"login successful!\")\r\n","    else:\r\n","      print('login failed...')\r\n","\r\n","accept_login(users, check_users.keys(), check_users.values())"],"execution_count":118,"outputs":[{"output_type":"stream","text":["login failed...\n","login successful!\n","login failed...\n","login failed...\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"I-DXGS7GwkWv"},"source":["### 4. Using while loops (*jazzhands*)"]},{"cell_type":"code","metadata":{"id":"-lN_Jstfwn_L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612773629656,"user_tz":480,"elapsed":6035,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"9a20fa73-9505-4a5c-8f7d-271f6b886c42"},"source":["# part 1\r\n","counter = 0\r\n","while counter < 3:\r\n","  number = input(\"Enter a number\")\r\n","  if number.isnumeric() == False:\r\n","    print(\"This is not a number\")\r\n","    break\r\n","  elif number.isnumeric():\r\n","    num_value = int(number)\r\n","    factorial = num_value\r\n","    for i in range(1, num_value):\r\n","      factorial *= i\r\n","    print('factorial = ', factorial)\r\n","  counter += 1"],"execution_count":56,"outputs":[{"output_type":"stream","text":["Enter a number10\n","factorial =  3628800\n","Enter a number5\n","factorial =  120\n","Enter a numberabc123\n","This is not a number\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NyIvYB2esoul","executionInfo":{"status":"ok","timestamp":1612773726381,"user_tz":480,"elapsed":9346,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"1553a443-aba4-4683-cc28-4725af19c877"},"source":["# part 2\r\n","counter = 0\r\n","while counter < 3:\r\n","  number = input(\"Enter a number\")\r\n","  if number.isnumeric() == False:\r\n","    print(\"This is not a number\")\r\n","    break\r\n","  elif number.isnumeric():\r\n","    num_of_digits = len(number)\r\n","    print(num_of_digits)\r\n","  counter += 1"],"execution_count":59,"outputs":[{"output_type":"stream","text":["Enter a number238475\n","6\n","Enter a number25\n","2\n","Enter a numberxyz\n","This is not a number\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UPcfYrUQsoyp","executionInfo":{"status":"ok","timestamp":1612773827478,"user_tz":480,"elapsed":21739,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"dfe4093e-dd33-4f79-fb3a-2b57e903a152"},"source":["# part 3\r\n","counter = 0\r\n","while counter < 3:\r\n","\r\n","  lst = []\r\n","  evens = []\r\n","  odds = []\r\n","  stopper = False\r\n","\r\n","  while stopper == False:\r\n","    numbers = input(\"Enter some numbers\")\r\n","    if numbers == \"Done\":\r\n","      stopper = True\r\n","    elif numbers.isnumeric() == False:\r\n","      print(\"Input is not a number\")\r\n","      break\r\n","    else:\r\n","      lst.append(numbers)\r\n","\r\n","  for i in lst:\r\n","    if i.isalpha():\r\n","      print(\"Error - input is not a number\")\r\n","      break\r\n","    elif int(i) % 2 == 0:\r\n","      evens.append(int(i))\r\n","    elif int(i) % 2 == 1:\r\n","      odds.append(int(i))\r\n","    \r\n","  even_sum = sum(evens)\r\n","  print('sum of evens = ', even_sum)\r\n","  odd_sum = sum(odds)\r\n","  print('sum of odds = ', odd_sum)\r\n","  counter += 1"],"execution_count":61,"outputs":[{"output_type":"stream","text":["Enter some numbers3\n","Enter some numbers4\n","Enter some numbers2\n","Enter some numbersDone\n","sum of evens =  6\n","sum of odds =  3\n","Enter some numbers2\n","Enter some numbers4\n","Enter some numbers5\n","Enter some numbers6\n","Enter some numbers4\n","Enter some numbers4\n","Enter some numbersDone\n","sum of evens =  20\n","sum of odds =  5\n","Enter some numbers3\n","Enter some numbers4\n","Enter some numbersxyz\n","Input is not a number\n","sum of evens =  4\n","sum of odds =  3\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xTSGM2zuxRUx"},"source":["### 5. Downloaded Data on McDonalds\r\n","\r\n"]},{"cell_type":"code","metadata":{"id":"_6-8PGSgxURb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612774335096,"user_tz":480,"elapsed":418,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"e77b41a5-759b-47b6-c4f8-a2ec7ba63d9b"},"source":["data = {\r\n","    'items': ['Bacon & Cheese Whopper Sandwich', 'Double Whopper Sandwich', 'Triple Whopper Sandwich with Cheese', 'Whopper Jr. Sandwich', 'Whopper Sandwich', 'Bacon Cheeseburger', 'Bacon Double Cheeseburger', 'Bacon King Jr. Sandwich', 'Bacon King Sandwich', 'Cheeseburger', 'Double Cheeseburger', 'Double Hamburger', 'Extra Long Cheeseburger', 'Hamburger', 'Bacon & Cheese Crispy Chicken Sandwich', 'Big Fish Sandwich', 'BK Veggie Burger', 'Chicken Fries', 'Chicken Nuggets, 6 Piece', 'Chicken Nuggets, 10 Piece', 'Chicken Nuggets, 20 Piece', 'Crispy Chicken Jr.', 'Crispy Chicken Sandwich', 'Grilled Chicken Sandwich', 'Original Chicken Sandwich', 'Rodeo Crispy Chicken Sandwich', 'Spicy Crispy Chicken Jr.', 'Cheesy Tots', 'French Fries, Large (Salted)', 'French Fries, Medium (Salted)', 'French Fries, Small (Salted)', 'French Fries, Value (Salted)', 'Garden Chicken Salad with Crispy Chicken, No Dressing', 'Garden Side Salad, No Dressing', 'Onion Rings, Large', 'Onion Rings, Medium', 'Onion Rings, Small', 'BK Ultimate Breakfast Platter', \"Croissan'wich Egg & Cheese\", 'French Toast Sticks, 5 Piece', \"Fully Loaded Croissan'wich\", 'Hash Browns, Large', 'Hash Browns, Medium', \"King Croissan'wich with Double Sausage\", \"King Croissan'wich with Sausage And Bacon\", 'Pancake and Sausage Platter', 'Quaker Oatmeal Maple Flavor', 'Sausage, Egg, & Cheese Biscuit', 'Sausage Biscuit', 'Caramel Sundae', 'Chocolate Chip Cookies', 'Dutch Apple Pie', \"Hershey's Chocolate Sundae\", \"Hershey's Sundae Pie\", 'Oatmeal Raisin Cookies', 'Oreo Cookie Cheesecake', 'Soft Serve Cone', 'Strawberry Banana Smoothie', 'Value Menu Cheeseburger', 'Value Menu Rodeo Burger'],\r\n","    'price': ['$1.19', '$7.59', '$6.99', '$5.29', '$6.49', '$1.69', '$2.29', '$1.29', '$3.89', '$3.99', '$4.49', '$1.09', '$6.09', '$3.99', '$1.79', '$6.39', '$2.09', '$2.99', '$4.99', '$1.59', '$2.89', '$1.00', '$6.19', '$7.49', '$1.99', '$1.00', '$1.00', '$1.19', '$2.39', '$2.19', '$1.79', '$3.59', '$6.19', '$1.99', '$2.39', '$3.89', '$2.89', '$4.89', '$5.99', '$3.99', '$6.19', '$1.89', '$1.69', '$5.59', '$4.79', '$3.69', '$1.99', '$5.59', '$1.00', '$3.59', '$2.00', '$1.29', '$1.49', '$1.69', '$4.49', '$1.00', '$1.00', '$3.49', '$2.39', '$1.00'],\r\n","    'serving_size': [303.0, 354.0, 461.0, 134.0, 270.0, 118.0, 155.0, 175.0, 356.0, 111.0, 148.0, 136.0, 226.0, 99.0, 262.0, 188.0, 219.0, 91.0, 88.0, 146.0, 292.0, 142.0, 228.0, 229.0, 219.0, 270.0, 142.0, 128.0, 173.0, 153.0, 128.0, 89.0, 287.0, 99.0, 142.0, 117.0, 91.0, 487.0, 125.0, 109.0, 218.0, 225.0, 169.0, 224.0, 187.0, 217.0, 172.0, 189.0, 121.0, 153.0, 76.0, 107.0, 153.0, 79.0, 76.0, 92.0, 120.0, 'nan', 111.0, 117.0],\r\n","    'total_fat': [51.0, 58.0, 82.0, 18.0, 40.0, 16.0, 24.0, 38.0, 79.0, 13.0, 21.0, 18.0, 37.0, 10.0, 52.0, 28.0, 17.0, 17.0, 16.0, 27.0, 54.0, 30.0, 41.0, 19.0, 40.0, 60.0, 21.0, 15.0, 19.0, 17.0, 14.0, 10.0, 25.0, 4.0, 25.0, 21.0, 16.0, 70.0, 18.0, 18.0, 40.0, 44.0, 33.0, 52.0, 40.0, 31.0, 3.0, 38.0, 28.0, 6.0, 15.0, 14.0, 7.0, 19.0, 13.0, 18.0, 4.5, 1.0, 13.0, 14.0],\r\n","    'carbs': [50, 49, 50, 27, 49, 27, 27, 27, 49, 27, 27, 26, 45, 26, 55, 51, 41, 20, 16, 27, 53, 34, 54, 39, 48, 72, 37, 34, 60, 53, 44, 31, 31, 3, 64, 53, 41, 122, 29, 49, 31, 65, 48, 31, 31, 72, 32, 29, 28, 53, 47, 51, 47, 32, 46, 41, 32, 71, 27, 38],\r\n","    'protein': [35, 48, 71, 13, 28, 17, 25, 29, 61, 15, 23, 21, 29, 13, 30, 16, 21, 13, 12, 20, 39, 12, 23, 37, 28, 33, 12, 9, 6, 5, 4, 3, 25, 4, 5, 4, 3, 29, 12, 5, 28, 5, 4, 29, 23, 12, 4, 19, 12, 6, 3, 3, 6, 3, 4, 6, 5, 4, 15, 13],\r\n","    'sugar': [11, 11, 11, 7, 11, 7, 7, 6, 10, 7, 7, 6, 9, 6, 8, 7, 9, 1, 0, 0, 1, 5, 8, 6, 5, 14, 6, 0, 0, 0, 0, 0, 4, 2, 7, 5, 4, 33, 4, 13, 5, 0, 0, 5, 5, 30, 12, 3, 2, 39, 29, 25, 41, 22, 26, 25, 24, 50, 7, 9],\r\n","    'calories': [790, 900, 1220, 310, 660, 320, 420, 570, 1150, 280, 390, 350, 630, 240, 800, 510, 390, 280, 260, 430, 860, 450, 670, 470, 660, 960, 390, 310, 430, 380, 320, 220, 440, 60, 500, 410, 320, 1230, 340, 380, 610, 670, 500, 710, 580, 610, 170, 530, 420, 290, 330, 340, 280, 310, 310, 350, 190, 310, 280, 330],\r\n","}\r\n","print(data.keys())\r\n","print(data['price'][0])"],"execution_count":65,"outputs":[{"output_type":"stream","text":["dict_keys(['items', 'price', 'serving_size', 'total_fat', 'carbs', 'protein', 'sugar', 'calories'])\n","$1.19\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0WpK0q_a0Idw","executionInfo":{"status":"ok","timestamp":1612775191806,"user_tz":480,"elapsed":415,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"c0a8c4e3-8f0f-4a40-aa6f-69a16705958b"},"source":["# part a\r\n","price_clean = []\r\n","for i in data['price']:\r\n","  value = float(i[1:])\r\n","  price_clean.append(value)\r\n","\r\n","print(price_clean[0:5])"],"execution_count":73,"outputs":[{"output_type":"stream","text":["[1.19, 7.59, 6.99, 5.29, 6.49]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0z4AyaMt4R1r"},"source":["# part b (honestly don't get this or how it could be better than method a)\r\n","price_clean = [value[1:] for value in data['price']]\r\n","print(price_clean[0:5])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FfSuA4Vq2shw"},"source":["# part c\r\n","price_clean = []\r\n","for i in data['price']:\r\n","  value = float(i[1:])\r\n","  price_clean.append(value)\r\n","\r\n","data['price'] = price_clean"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yNazEyJ77Amp","executionInfo":{"status":"ok","timestamp":1612775704614,"user_tz":480,"elapsed":512,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"6cc4108d-4ce2-41c5-92b2-ffcb31579dd5"},"source":["print(data['price'][0:5])"],"execution_count":90,"outputs":[{"output_type":"stream","text":["[1.19, 7.59, 6.99, 5.29, 6.49]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"35BOswb361aA","executionInfo":{"status":"ok","timestamp":1612776016492,"user_tz":480,"elapsed":402,"user":{"displayName":"Juan Roa","photoUrl":"","userId":"06918161443370291542"}},"outputId":"45e461b9-62ca-4c8a-efd0-daeb3c02a141"},"source":["# part d\r\n","def average(key):\r\n","  total = sum(data[key])\r\n","  average = total / len(data[key])\r\n","  print('The average ', key, ' is ', average)\r\n","\r\n","average('price')\r\n","average('protein')\r\n","average('carbs')\r\n","average('sugar')\r\n","average('total_fat')"],"execution_count":91,"outputs":[{"output_type":"stream","text":["The average  price  is  3.283\n","The average  protein  is  17.366666666666667\n","The average  carbs  is  41.983333333333334\n","The average  sugar  is  10.283333333333333\n","The average  total_fat  is  27.208333333333332\n"],"name":"stdout"}]}]}